[
  {
    "id": 1,
    "question": "What is the dot product of [1, 2, 0] and [0, 1, 3]?",
    "choices": ["0", "2", "3", "6"],
    "answerIndex": 2,
    "bracket": "beginner",
    "nodeId": "dot_product"
  },
  {
    "id": 2,
    "question": "True or false: multiplying a 2×2 matrix by a 2×1 vector yields a 2×1 vector.",
    "choices": ["True", "False"],
    "answerIndex": 0,
    "bracket": "beginner",
    "nodeId": "matrix_vector_multiplication"
  },
  {
    "id": 3,
    "question": "If you flip a fair coin once, what is the probability of heads?",
    "choices": ["25%", "33%", "50%", "75%"],
    "answerIndex": 2,
    "bracket": "beginner",
    "nodeId": "bernoulli_trial"
  },
  {
    "id": 4,
    "question": "What is the Euclidean norm of the vector [3, 4]?",
    "choices": ["5", "7", "25", "√7"],
    "answerIndex": 0,
    "bracket": "beginner",
    "nodeId": "vector_norm"
  },
  {
    "id": 5,
    "question": "What is 3 times the vector [1, 2]?",
    "choices": ["[3, 2]", "[1, 6]", "[3, 6]", "[6, 6]"],
    "answerIndex": 2,
    "bracket": "beginner",
    "nodeId": "scalar_multiplication"
  },
  {
    "id": 6,
    "question": "Compute the derivative d/dx(4x).",
    "choices": ["x", "4", "0", "1"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "basic_derivative"
  },
  {
    "id": 7,
    "question": "What is the value of ∫₀² x dx?",
    "choices": ["1", "2", "4", "6"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "definite_integral"
  },
  {
    "id": 8,
    "question": "What does Σ₍ᵢ₌₁₎³ i equal?",
    "choices": ["3", "6", "9", "None of the above"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "summation_notation"
  },
  {
    "id": 9,
    "question": "What is one-hot encoding?",
    "choices": ["Mapping categories to scalars","Mapping categories to orthogonal binary vectors","Reducing dimensions","Normalizing data"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "one_hot_encoding"
  },
  {
    "id": 10,
    "question": "In Python, what does len([5, 6, 7, 8]) return?",
    "choices": ["3", "4", "5", "6"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "list_length"
  },
  {
    "id": 11,
    "question": "What’s the main difference between a list and a tuple in Python?",
    "choices": ["Lists are mutable","Tuples are mutable","Lists use less memory","Tuples cannot be nested"],
    "answerIndex": 0,
    "bracket": "beginner",
    "nodeId": "list_vs_tuple"
  },
  {
    "id": 12,
    "question": "What does a for loop do?",
    "choices": ["Executes a block until a condition is false","Iterates over a sequence","Defines a function","Creates a variable"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "for_loop"
  },
  {
    "id": 13,
    "question": "What does a while loop do?",
    "choices": ["Executes code while a condition is true","Iterates over a sequence","Runs only once","Defines a loop variable"],
    "answerIndex": 0,
    "bracket": "beginner",
    "nodeId": "while_loop"
  },
  {
    "id": 14,
    "question": "Define mean and median.",
    "choices": ["Average and middle value","Most frequent and average","Middle value and minimum","Maximum and minimum"],
    "answerIndex": 0,
    "bracket": "beginner",
    "nodeId": "mean_and_median"
  },
  {
    "id": 15,
    "question": "What is the probability of rolling a 6 on a fair six-sided die?",
    "choices": ["1/3", "1/6", "1/4", "1/5"],
    "answerIndex": 1,
    "bracket": "beginner",
    "nodeId": "probability_die"
  },
  {
    "id": 16,
    "question": "What is the formula for the determinant of a 2×2 matrix [[a, b], [c, d]]?",
    "choices": ["ad − bc","a + d","ab + cd","a/b + c/d"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "determinant_formula"
  },
  {
    "id": 17,
    "question": "What is an eigenvalue λ of a matrix A?",
    "choices": ["A(v) = v","det(A − λI) = 0","trace(A) = λ","A * λ = I"],
    "answerIndex": 1,
    "bracket": "intermediate",
    "nodeId": "eigenvalues"
  },
  {
    "id": 18,
    "question": "Use the chain rule to differentiate sin(3x²).",
    "choices": ["6x cos(3x²)","3x cos(x²)","cos(3x²)","6 cos(x²)"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "chain_rule"
  },
  {
    "id": 19,
    "question": "What is the gradient of f(x, y) = x²y + 3y?",
    "choices": ["(2xy, x² + 3)","(2x + y, 3y)","(2y, x + 3)","(x², 3y)"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "multivariable_gradient"
  },
  {
    "id": 20,
    "question": "Which formula represents Bayes’ theorem?",
    "choices": ["P(A)P(B) / P(A ∩ B)","P(B | A)P(A) / P(B)","P(A ∩ B) / P(A)","P(A)P(B | A)"],
    "answerIndex": 1,
    "bracket": "intermediate",
    "nodeId": "bayes_theorem"
  },
  {
    "id": 21,
    "question": "What does Σ₍ₖ₌₀₎ⁿ C(n, k) equal?",
    "choices": ["2ⁿ","n!","n²","n"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "binomial_identity"
  },
  {
    "id": 22,
    "question": "What does standard deviation measure in a dataset?",
    "choices": ["Average deviation from the mean","Spread of data around the mean","Minimum value","Maximum value"],
    "answerIndex": 1,
    "bracket": "intermediate",
    "nodeId": "standard_deviation"
  },
  {
    "id": 23,
    "question": "What is the inverse of matrix A such that A⁻¹A = I?",
    "choices": ["A⁻¹","Aᵀ","det(A)","trace(A)"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "matrix_inversion"
  },
  {
    "id": 24,
    "question": "What is Gaussian elimination used for?",
    "choices": ["Solving linear systems","Computing eigenvalues","Matrix factorization","Dimension reduction"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "gaussian_elimination"
  },
  {
    "id": 25,
    "question": "Newton’s method updates xₙ to find roots by:",
    "choices": ["xₙ₊₁ = xₙ − f(xₙ)/f′(xₙ)","Bisecting intervals","Random sampling","Gradient ascent"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "newton_method"
  },
  {
    "id": 26,
    "question": "Which describes a convex function?",
    "choices": ["Line segment between points lies above the graph","Line segment between points lies below the graph","Graph lies above segment","Graph intersects segment"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "convex_function"
  },
  {
    "id": 27,
    "question": "What does gradient descent do?",
    "choices": ["Optimizes model parameters by moving opposite the gradient","Optimizes the gradient","Minimizes learning rate","Increases batch size"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "gradient_descent"
  },
  {
    "id": 28,
    "question": "In logistic regression, the model output is:",
    "choices": ["A probability","A binary label directly","A hidden state","A regression line"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "logistic_regression"
  },
  {
    "id": 29,
    "question": "What is the time complexity of merge sort?",
    "choices": ["O(n log n)","O(n²)","O(n)","O(log n)"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "time_complexity"
  },
  {
    "id": 30,
    "question": "How do you reverse a string \"abc\" in Python?",
    "choices": ["\"abc\"[::-1]","reverse(\"abc\")","str.reverse(\"abc\")","slice(\"abc\")"],
    "answerIndex": 0,
    "bracket": "intermediate",
    "nodeId": "string_reverse"
  },
  {
    "id": 31,
    "question": "Which factorization represents the SVD of matrix M?",
    "choices": ["UΣVᵀ","UVΣ","ΣUV","VΣU"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "singular_value_decomposition"
  },
  {
    "id": 32,
    "question": "Lagrange multipliers solve constrained optimization by:",
    "choices": ["∇f = λ ∇g","Setting gradient to zero","Adding a penalty term","Scaling variables"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "lagrange_multipliers"
  },
  {
    "id": 33,
    "question": "Entropy H(p) measures:",
    "choices": ["Average information content","Prediction error","Gradient magnitude","Parameter count"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "entropy"
  },
  {
    "id": 34,
    "question": "KL divergence measures:",
    "choices": ["Discrepancy between distributions","Correlation","Euclidean distance","Covariance"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "kl_divergence"
  },
  {
    "id": 35,
    "question": "Cross-entropy loss is defined as:",
    "choices": ["−Σ y log p","Σ y p","Σ p log p","−Σ p y"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "cross_entropy"
  },
  {
    "id": 36,
    "question": "Backpropagation computes:",
    "choices": ["Gradients via the chain rule","Weight updates directly","Activation outputs","Loss value"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "backpropagation"
  },
  {
    "id": 37,
    "question": "Which optimizer uses running estimates of first and second moments of gradients?",
    "choices": ["Adam","SGD","Momentum","RMSprop"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "adam_optimizer"
  },
  {
    "id": 38,
    "question": "What is dropout regularization?",
    "choices": ["Randomly zeroing activations during training","Dropping entire layers","Removing data points","Scaling the learning rate"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "dropout_regularization"
  },
  {
    "id": 39,
    "question": "How is scaled dot-product attention computed?",
    "choices": ["Softmax(QKᵀ/√dₖ)·V","Softmax(QKᵀ)·V","ReLU(QK)·V","Sigmoid(Q+K)·V"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "scaled_dot_product_attention"
  },
  {
    "id": 40,
    "question": "CUDA parallelism refers to:",
    "choices": ["Executing many threads on GPU cores","Parallel CPU processes","Sequential CPU execution","Vector operations"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "cuda_parallelism"
  },
  {
    "id": 41,
    "question": "Why are GPUs favored for deep learning?",
    "choices": ["Optimized for massive parallel operations","Higher single-thread clock speed","Lower latency branching","Larger per-core caches"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "gpu_architecture"
  },
  {
    "id": 42,
    "question": "What is beam search used for?",
    "choices": ["Sequence decoding","Training optimization","Graph search","Feature extraction"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "beam_search"
  },
  {
    "id": 43,
    "question": "What does cross-validation do?",
    "choices": ["Splits data into folds for evaluation","Regularizes models","Defines a loss function","Selects an optimizer"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "cross_validation"
  },
  {
    "id": 44,
    "question": "A Markov chain has the property that:",
    "choices": ["The next state depends only on the current state","It depends on the full history","It always converges","Transitions are uniform"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "markov_chain"
  },
  {
    "id": 45,
    "question": "What does transfer learning allow a model to do?",
    "choices": ["Reuse parameters on new tasks","Train from scratch faster","Avoid fine-tuning","Normalize data"],
    "answerIndex": 0,
    "bracket": "advanced",
    "nodeId": "transfer_learning"
  }
]
